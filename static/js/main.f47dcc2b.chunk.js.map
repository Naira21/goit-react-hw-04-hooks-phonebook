{"version":3,"sources":["components/ContactList/Contact.module.css","components/Form/Form.module.css","App.module.css","components/Filter/Filter.module.css","components/Filter/Filter.js","components/ContactList/ContactElement.js","components/ContactList/ContactList.js","components/Form/Form.js","App.js","index.js"],"names":["module","exports","Filter","id","value","onChange","htmlFor","className","s","labelText","type","name","filterBtn","ContactElement","contact","onDeleteContact","number","deleteBtn","onClick","ContactList","contacts","list","map","prototype","PropTypes","arrayOf","shape","string","func","Form","onSubmit","useState","setName","setNumber","contactIdName","useRef","uuidv4","contactIdNumber","resetForm","handleChange","e","target","preventDefault","obj","pattern","title","required","addBtn","App","JSON","parse","window","localStorage","getItem","contactsData","setContacts","filter","setFilter","useEffect","setItem","stringify","filteredContacts","toLowerCase","includes","wrapper","pageTitle","newContact","find","alert","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f47dcc2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__1x6a7\",\"deleteBtn\":\"Contact_deleteBtn__1v3Em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"Form_addBtn__3kkHF\",\"labelText\":\"Form_labelText__2dKkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__YMsWE\",\"wrapper\":\"App_wrapper__1Dzxy\",\"pageTitle\":\"App_pageTitle__1gw7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelText\":\"Filter_labelText__3qLB2\",\"filterBtn\":\"Filter_filterBtn__1hO9m\"};","import React from \"react\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ id, value, onChange }) => (\n  <label htmlFor={id} className={s.labelText}>\n    Find contacts by name\n    <input\n      id={id}\n      type=\"text\"\n      name=\"name\"\n      value={value}\n      onChange={onChange}\n      className={s.filterBtn}\n    />\n  </label>\n);\n\nexport default Filter;\n","import s from \"./Contact.module.css\";\n\nconst ContactElement = ({ contact, onDeleteContact }) => (\n  <li key={contact.id}>\n    {contact.name}: {contact.number}\n    <button\n      className={s.deleteBtn}\n      type=\"button\"\n      onClick={() => onDeleteContact(contact.id)}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nexport default ContactElement;\n","import ContactElement from \"./ContactElement\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Contact.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ol className={s.list}>\n    {contacts.map((contact) => (\n      <ContactElement\n        contact={contact}\n        onDeleteContact={onDeleteContact}\n        key={contact.id}\n      />\n    ))}\n  </ol>\n);\n\nexport default ContactList;\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      number: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import { useState, useRef } from \"react\";\nimport s from \"./Form.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contactIdName = useRef(() => {\n    uuidv4();\n  });\n  const contactIdNumber = useRef(() => {\n    uuidv4();\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const obj = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    onSubmit(obj);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={contactIdName} className={s.labelText}>\n        Name\n      </label>\n      <input\n        id={contactIdName}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n        value={name}\n      />\n\n      <label htmlFor={contactIdNumber} className={s.labelText}>\n        Number\n      </label>\n      <input\n        id={contactIdNumber}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n        value={number}\n      />\n      <button type=\"submit\" className={s.addBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import s from \"./App.module.css\";\nimport { useState, useEffect } from \"react\";\nimport contactsData from \"./contacts.json\";\n\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(\n    () => JSON.parse(window.localStorage.getItem(\"contacts\")) ?? contactsData\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmit = (newContact) => {\n    const duplicateContact = contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n    if (duplicateContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    setContacts([...contacts, newContact]);\n  };\n\n  const deleteContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className={s.wrapper}>\n      <h1 className={s.pageTitle}>Phonebook</h1>\n      <Form onSubmit={handleSubmit} />\n      <h2>Contacts</h2>\n      <Filter onChange={changeFilter} value={filter} />\n      <ContactList\n        contacts={filteredContacts}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}